<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_anzuelo</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// INICIALIZAR.

linea = noone;          // Línea de origen.
altura = 0;             // Altura desde donde sale de línea.
dist = 0;               // Distancia hasta línea.
angulo = 335;           // Ángulo desde línea.
radio[CONGRIO] = 0;     // Radio atracción de congrios.
radio[JERGUILLA] = 0;   // Radio atracción de jerguillas.

pescando = false;       // Si ya está activado.
presa = noone;          // Presa ya atrapada.
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// POSICIONARSE.

// De dónde sale de la línea principal.
xstart = linea.x;
ystart = max(linea.y-altura,MAREA);

// Recogerse hacia el barco.
if (linea.estado == linea_recogiendo)
    {
    angulo += sign(270-angulo)*0.5;
    }

// Posición del anzuelo.
x = xstart+dist*(1+linea.porcentaje)*cos(degtorad(angulo))/2;
y = ystart-dist*linea.porcentaje*sin(degtorad(angulo));

// Traer consigo la presa.
if (instance_exists(presa))
    {
    presa.x = x;
    presa.y = y;
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// ATRAER PECES.

if (instance_exists(presa)) {exit}

var pez;

pez = collision_circle(x,y,radio[CONGRIO],obj_congrio,1,0);
if (instance_exists(pez))
    {
    if (pez.vivo)
        {
        pez.presa = self;
        pez.estado = pez_cazando;
        }
    }
    
if (instance_exists(pez)) {exit}
pez = collision_circle(x,y,radio[JERGUILLA],obj_jerguilla,1,0);
if (instance_exists(pez))
    {
    if (pez.vivo)
        {
        pez.presa = self;
        pez.estado = pez_cazando;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_pez">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// ATRAPAR.

// No está pescando.
if (!pescando) {exit}

// Atrapar pez.
presa = other;
presa.vivo = false;
presa.estado = pez_pescado;
presa.anzuelo = self;
linea.faltan -= 1;
pescando = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DIBUJARSE.

/*
if (pescando)
    {
    draw_set_color(c_red);
    draw_circle(x,y,radio[CONGRIO],1);
    draw_circle(x,y,radio[JERGUILLA],1);
    }
*/
draw_set_color(COLOR_LINEA);
draw_set_alpha(0.7);
draw_line(xstart,ystart,x,y)

image_index = linea.activado;
image_angle = angulo;
image_yscale = +1;
if (angulo &lt; 270)
    {image_yscale = -1}
draw_self();


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
