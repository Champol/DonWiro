<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_buzo</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-200</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// INICIALIZAR.

// Estado.
estado = buzo_esperando;    // Comportamiento.
extraer = noone;            // Qué se le pidió.
presa = noone;              // Qué está siguiendo.
menu = false;               // Menú abierto.

// Atributos.
maxspeed = 3;               // Rapidez máxima.
accel = 0.05;               // Cambio de rapidez.
dir = 0;                    // Dirección.
cupo_total = 50;            // Espacio en chinguillo.
cupo_queda = 50;            // Espacio restante.
radio_vision = 40;          // Radio de detección.
friccion = accel/2;         // Fricción.

// Animación.
borde = 40;
xstart = W/2;
ystart = MAREA+100;
image_speed = 0.1;
audio_play_sound(snd_buceo,0.5,1);
ang = 0.0;
zoom = 0.7;

// Articulaciones.
dojos = +63;
dhombro = +25;
dpelvis = -35;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// BOTÓN MENÚ BUZO.

menu = instance_create(W-60,H-60,obj_boton_buzo);
menu.buzo = self;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// NO BORRAR.
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// LÍMITES.

if (x &lt; borde)          {hspeed = +abs(hspeed)}
if (x &gt; W-borde)        {hspeed = -abs(hspeed)}
if (y &lt; MAREA+borde/2)  {vspeed = +abs(vspeed)}
if (y &gt; H-borde)        {vspeed = -abs(vspeed)}

speed = clamp(speed,0,maxspeed);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// ACTUAR.

script_execute(estado);

// buzo_esperando;
// buzo_buscando;
// buzo_siguiendo;
// buzo_atrapando;
// buzo_retornando;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DIBUJARSE.

image_angle = direction;
image_xscale = zoom;
if (hspeed &lt; 0) {image_yscale = -1*zoom}
else            {image_yscale = +1*zoom}

xhombro = x+dhombro*zoom*cos(degtorad(image_angle));
yhombro = y-dhombro*zoom*sin(degtorad(image_angle));
xpelvis = x+dpelvis*zoom*cos(degtorad(image_angle));
ypelvis = y-dpelvis*zoom*sin(degtorad(image_angle));

ang += speed/30;

if (menu.activado) {buzo_dibujar(spr_buzo_ilum)}
buzo_dibujar(spr_buzo);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DEBUG.

draw_set_colour(c_yellow);
draw_circle(xstart,ystart,20,1);

if (instance_exists(presa))
    {
    draw_set_colour(c_red);
    draw_circle(presa.x,presa.y,15,1);
    }

draw_set_color(c_blue);
var hor = x+dojos*cos(degtorad(direction));
var ver = y-dojos*sin(degtorad(direction));
draw_circle(hor,ver,radio_vision,1);

draw_set_color(c_orange);
draw_rectangle(x-100,y-60,x+100,y+60,1);

draw_text(600,30,cupo_queda);
draw_text(630,30,"/");
draw_text(660,30,cupo_total);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
